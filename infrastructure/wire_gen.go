// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package infrastructure

import (
	"github.com/google/wire"
	"github.com/shota-aa/grpc-pr/config"
	"github.com/shota-aa/grpc-pr/interfaces/handler"
	"github.com/shota-aa/grpc-pr/interfaces/repository"
	"github.com/shota-aa/grpc-pr/usecase/service"
)

// Injectors from wire.go:

func InjectGRPCServer(c *config.Config) (handler.GRPC, error) {
	client, err := NewFirestoreClient(c)
	if err != nil {
		return handler.GRPC{}, err
	}
	userRepository := repository.NewUserRepository(client)
	userService := service.NewUserService(userRepository)
	userHandler := handler.NewUserHandler(userService)
	grpc := handler.NewGRPC(userHandler)
	return grpc, nil
}

// wire.go:

var firestoreSet = wire.NewSet(NewFirestoreClient)

var userSet = wire.NewSet(repository.NewUserRepository, service.NewUserService, handler.NewUserHandler)

var grpcSet = wire.NewSet(handler.NewGRPC)
